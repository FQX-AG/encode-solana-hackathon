version: "3.8"
services:
  rpc-proxy:
    build:
      context: .
      dockerfile: docker/rpc-proxy/Dockerfile
    develop:
      watch:
        - action: sync
          path: ./rpc-proxy/
          target: /usr/src/app/rpc-proxy/
        - action: rebuild
          path: ./package.json
        - action: rebuild
          path: ./rpc-proxy/package.json
    ports:
      - "3002:8080"
    command: pnpm --filter ./rpc-proxy start:dev

    networks:
      - default
  redis:
    hostname: redis
    image: redis:7.2.4-alpine
    ports:
      - "6379:6379"
    env_file:
      - ./rpc-proxy/.env
    networks:
      - default
  backend:
    hostname: backend
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    ports:
      - "3000:8080"
    develop:
      watch:
        - action: sync
          path: ./backend/
          target: /usr/src/app/backend/
        - action: rebuild
          path: ./programs/
        - action: rebuild
          path: ./package.json
        - action: rebuild
          path: ./backend/package.json
    environment:
      - NODE_ENV=development
    env_file:
      - ./backend/.env
    command: pnpm --filter backend start:dev
    networks:
      - default
    depends_on:
      - redis
  frontend:
    hostname: frontend
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    ports:
      - "3001:3000"
    develop:
      watch:
        - action: sync
          path: ./frontend/
          target: /usr/src/app/frontend/
        - action: rebuild
          path: ./package.json
        - action: rebuild
          path: ./frontend/package.json
    environment:
      - NODE_ENV=development
    env_file:
      - ./frontend/.env
    command: pnpm --filter ./frontend dev
    networks:
      - default
    depends_on:
      - rpc-proxy
networks:
  default:
